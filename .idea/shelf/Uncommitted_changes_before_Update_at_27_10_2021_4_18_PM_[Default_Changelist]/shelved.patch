Index: app/src/main/java/com/example/mytravelbuddy/ui/Map_Activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mytravelbuddy.ui;\r\n\r\nimport android.Manifest;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresPermission;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.example.mytravelbuddy.R;\r\nimport com.huawei.hms.maps.HuaweiMap;\r\nimport com.huawei.hms.maps.HuaweiMapOptions;\r\nimport com.huawei.hms.maps.MapView;\r\nimport com.huawei.hms.maps.MapsInitializer;\r\nimport com.huawei.hms.maps.OnMapReadyCallback;\r\nimport com.huawei.hms.maps.model.Marker;\r\n\r\nimport static android.Manifest.permission.ACCESS_FINE_LOCATION;\r\nimport static android.Manifest.permission.ACCESS_WIFI_STATE;\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class Map_Activity extends AppCompatActivity implements OnMapReadyCallback {\r\n    private MapView mMapView;\r\n    HuaweiMap hMap;\r\n    private Marker mMarker;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        MapsInitializer.setApiKey(\"CwEAAAAA87ygm62CxaYAnCnmLDj8LNdgxZ9Gt+/zTKg5oQDMsbJtWX/zNvzvhQN6gyEZKOWnoEQnrVwrDpT57bq0EZelxL3A9BE=\");\r\n\r\n        setContentView(R.layout.map_view);\r\n        // If the API level is 23 or higher (Android 6.0 or later), you need to dynamically apply for permissions.\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            Log.i(TAG, \"sdk >= 23 M\");\r\n            // Check whether your app has the specified permission and whether the app operation corresponding to the permission is allowed.\r\n            if (ActivityCompat.checkSelfPermission(this,\r\n                    ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\r\n                    || ActivityCompat.checkSelfPermission(this,\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n                // Request permissions for your app.\r\n                String[] strings =\r\n                        {ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION};\r\n                // Request permissions.\r\n                ActivityCompat.requestPermissions(this, strings, 1);\r\n            }\r\n        }\r\n\r\n        mMapView = findViewById(R.id.mapview_mapviewdemo);\r\n        Bundle mapViewBundle = null;\r\n        if (savedInstanceState != null) {\r\n            mapViewBundle = savedInstanceState.getBundle(\"MapViewBundleKey\");\r\n        }\r\n        mMapView.onCreate(mapViewBundle);\r\n        mMapView.getMapAsync(this);\r\n        HuaweiMapOptions huaweiMapOptions = new HuaweiMapOptions();\r\n        huaweiMapOptions.liteMode(true);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    //get location\r\n    @RequiresPermission(allOf = {ACCESS_FINE_LOCATION, ACCESS_WIFI_STATE})\r\n    @Override\r\n    public void onMapReady(HuaweiMap map){\r\n         hMap = map;\r\n\r\n\r\n        // Enable the my-location layer.\r\n        hMap.setMyLocationEnabled(true);\r\n        // Enable the my-location icon.\r\n        hMap.getUiSettings().setMyLocationButtonEnabled(true);\r\n        //allow compass\r\n        hMap.getUiSettings().setCompassEnabled(true);\r\n\r\n\r\n    }\r\n\r\n    private static final String MAPVIEW_BUNDLE_KEY = \"MapViewBundleKey\";\r\n\r\n    @Override\r\n    public void onSaveInstanceState(Bundle outState) {\r\n        super.onSaveInstanceState(outState);\r\n\r\n        Bundle mapViewBundle = outState.getBundle(MAPVIEW_BUNDLE_KEY);\r\n        if (mapViewBundle == null) {\r\n            mapViewBundle = new Bundle();\r\n            outState.putBundle(MAPVIEW_BUNDLE_KEY, mapViewBundle);\r\n        }\r\n\r\n        mMapView.onSaveInstanceState(mapViewBundle);\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        mMapView.onStart();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        mMapView.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        mMapView.onPause();\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        mMapView.onStop();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        mMapView.onDestroy();\r\n    }\r\n\r\n    @Override\r\n    public void onLowMemory() {\r\n        super.onLowMemory();\r\n        mMapView.onLowMemory();\r\n    }\r\n\r\n    @Override\r\n    public void onPointerCaptureChanged(boolean hasCapture) {\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mytravelbuddy/ui/Map_Activity.java b/app/src/main/java/com/example/mytravelbuddy/ui/Map_Activity.java
--- a/app/src/main/java/com/example/mytravelbuddy/ui/Map_Activity.java	(revision 27cfac50a4e9a78a6a723e59bf50b14cb110b05c)
+++ b/app/src/main/java/com/example/mytravelbuddy/ui/Map_Activity.java	(date 1635322706099)
@@ -70,8 +70,6 @@
     @Override
     public void onMapReady(HuaweiMap map){
          hMap = map;
-
-
         // Enable the my-location layer.
         hMap.setMyLocationEnabled(true);
         // Enable the my-location icon.
Index: app/src/main/java/com/example/mytravelbuddy/ui/camera_translate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mytravelbuddy.ui;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Point;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.util.SparseArray;\r\nimport android.view.SurfaceView;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.mytravelbuddy.MainActivity;\r\nimport com.example.mytravelbuddy.R;\r\nimport com.huawei.hmf.tasks.OnFailureListener;\r\nimport com.huawei.hmf.tasks.OnSuccessListener;\r\nimport com.huawei.hmf.tasks.Task;\r\nimport com.huawei.hms.mlsdk.MLAnalyzerFactory;\r\nimport com.huawei.hms.mlsdk.common.LensEngine;\r\nimport com.huawei.hms.mlsdk.common.MLAnalyzer;\r\nimport com.huawei.hms.mlsdk.common.MLApplication;\r\nimport com.huawei.hms.mlsdk.common.MLException;\r\nimport com.huawei.hms.mlsdk.text.MLLocalTextSetting;\r\nimport com.huawei.hms.mlsdk.text.MLText;\r\nimport com.huawei.hms.mlsdk.text.MLTextAnalyzer;\r\nimport com.huawei.hms.mlsdk.translate.MLTranslatorFactory;\r\nimport com.huawei.hms.mlsdk.translate.cloud.MLRemoteTranslateSetting;\r\nimport com.huawei.hms.mlsdk.translate.cloud.MLRemoteTranslator;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class camera_translate extends AppCompatActivity {\r\n\r\n    LensEngine mLensEngine;\r\n    MLTextAnalyzer analyzer;\r\n    private int lensType = LensEngine.BACK_LENS;\r\n    private LensEnginePreview mPreview;\r\n    private TextView tv,tvFrom,tvTo,tvcamerastatus;\r\n    int checkedItem=0;\r\n    ImageButton pause;\r\n    String LanguageSelectedFrom=\"ko\";\r\n    String[]listItems = {\"English\",\"Korean\", \"Traditional Chinese\", \"Japanese\", \"Malay\", \"Tamil\",\"German\",\"Spanish\",\"Indonesian\",\"Russian\",\"Thai\",\"Vietnamese\"};\r\n    String[]languageselected = {\"en\",\"ko\", \"zh\", \"ja\", \"ms\", \"ta\",\"de\",\"es\",\"id\",\"ru\",\"th\",\"vi\"};\r\n    public String Status=\"pause\";\r\n    List<String> list = new ArrayList<String>();\r\n    Button btnlanguagefrom;\r\n\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.camera);\r\n        mPreview = findViewById(R.id.lensengine_preview);\r\n        tvFrom=findViewById(R.id.tvFrom);\r\n        tvTo=findViewById(R.id.tvTo);\r\n        tvcamerastatus=findViewById(R.id.tvcamerastatus);\r\n        pause=findViewById(R.id.pause_btn);\r\n\r\n        //Initialization\r\n        analyzer = new MLTextAnalyzer.Factory(camera_translate.this).setLocalOCRMode(MLLocalTextSetting.OCR_DETECT_MODE).setLanguage(LanguageSelectedFrom).create();\r\n        analyzer.setTransactor(new OcrDetectorProcessor());\r\n        createLensEngine();\r\n        startLensEngine(LanguageSelectedFrom);\r\n\r\n\r\n        btnlanguagefrom=findViewById(R.id.btnlanguagefrom);\r\n\r\n\r\n        pause.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                switch (Status){\r\n                    case \"pause\":\r\n                        onPause();\r\n                        pause.setImageResource(R.drawable.ic_baseline_pause_circle_24);\r\n                        Toast.makeText(camera_translate.this, \"The Preview Is Pause \", Toast.LENGTH_SHORT).show();\r\n                        tvcamerastatus.setText(\"The Camera Is Pause\");\r\n                        Status=\"play\";\r\n\r\n                        break;\r\n                    case \"play\":\r\n                        startLensEngine(LanguageSelectedFrom);\r\n                        pause.setImageResource(R.drawable.ic_baseline_play_circle_outline_24);\r\n                        Toast.makeText(camera_translate.this, \"The Preview Is Play \", Toast.LENGTH_SHORT).show();\r\n                        tvcamerastatus.setText(\"The Camera Is Play\");\r\n                        Status=\"pause\";\r\n\r\n                        break;\r\n\r\n            }}\r\n        });\r\n\r\n        btnlanguagefrom.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(camera_translate.this);\r\n                builder.setTitle(\"Pick a Language\");\r\n\r\n                //this will checked the item when user open the dialog\r\n                builder.setSingleChoiceItems(listItems, checkedItem, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n//                        Toast.makeText(root.getContext(), \"Position: \" + which + \" Value: \" + listItems[which], Toast.LENGTH_LONG).show();\r\n                        LanguageSelectedFrom=languageselected[which];\r\n                        startLensEngine(LanguageSelectedFrom);\r\n                        checkedItem = which;\r\n                        btnlanguagefrom.setText(listItems[which]);\r\n\r\n\r\n                    }\r\n                });\r\n\r\n                builder.setPositiveButton(\"Done\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n\r\n                AlertDialog dialog = builder.create();\r\n                dialog.show();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void createLensEngine() {\r\n        Context context = this.getApplicationContext();\r\n        mLensEngine = new LensEngine.Creator(context, this.analyzer)\r\n                .setLensType(this.lensType)\r\n                .applyDisplayDimension(1600, 1024)\r\n                .applyFps(60.0f)\r\n                .enableAutomaticFocus(true)\r\n                .create();\r\n    }\r\n\r\n    private void startLensEngine(String LanguageSelectedFroms) {\r\n        //Translation Kit\r\n        // Method 2: Use the customized parameter MLLocalTextSetting to configure the text analyzer on the device.\r\n        MLLocalTextSetting setting = new MLLocalTextSetting.Factory()\r\n                .setOCRMode(MLLocalTextSetting.OCR_DETECT_MODE)\r\n                // Specify languages that can be recognized.\r\n                .setLanguage(LanguageSelectedFroms)\r\n                .create();\r\n        Toast.makeText(camera_translate.this, \"Language From: \" + LanguageSelectedFrom, Toast.LENGTH_SHORT).show();\r\n        Toast.makeText(camera_translate.this, \"Language : \" + LanguageSelectedFroms, Toast.LENGTH_SHORT).show();\r\n        analyzer = MLAnalyzerFactory.getInstance().getLocalTextAnalyzer(setting);\r\n        if (this.mLensEngine != null) {\r\n            try {\r\n                this.mPreview.start(this.mLensEngine);\r\n            } catch (IOException e) {\r\n                this.mLensEngine.release();\r\n                this.mLensEngine = null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public class OcrDetectorProcessor implements MLAnalyzer.MLTransactor<MLText.Block> {\r\n\r\n        @Override\r\n        public void transactResult(MLAnalyzer.Result<MLText.Block> results) {\r\n\r\n            SparseArray<MLText.Block> blocks = results.getAnalyseList();\r\n            String result=\"\";\r\n                for (int i = 0; i < blocks.size(); i++) {\r\n                    List<MLText.TextLine> lines = blocks.get(i).getContents();\r\n                    for (int j = 0; j < lines.size(); j++) {\r\n                        List<MLText.Word> elements = lines.get(j).getContents();\r\n                        for (int k = 0; k < elements.size(); k++) {\r\n                                    result += elements.get(k).getStringValue() + \" \";\r\n                        }\r\n\r\n                    }\r\n                    result += \" \";\r\n\r\n                }\r\n            translateFunction(result);\r\n            tvFrom.setText(result);\r\n        }\r\n\r\n        @Override\r\n        public void destroy() {\r\n\r\n        }\r\n\r\n    }\r\n    //End Speech Output\r\n    private void translateFunction(String inputtext) {\r\n        MLApplication.getInstance().setApiKey(getResources().getString(R.string.api_key));\r\n\r\n        // Create a text translator using custom parameter settings.\r\n        MLRemoteTranslateSetting setting = new MLRemoteTranslateSetting\r\n                .Factory()\r\n                // Set the source language code. The BCP-47 standard is used for Traditional Chinese, and the ISO 639-1 standard is used for other languages. This parameter is optional. If this parameter is not set, the system automatically detects the language.\r\n                .setSourceLangCode(LanguageSelectedFrom)\r\n                // Set the target language code. The BCP-47 standard is used for Traditional Chinese, and the ISO 639-1 standard is used for other languages.\r\n//                .setTargetLangCode(languageselected.toString())\r\n                .setTargetLangCode(\"en\")\r\n                .create();\r\n//        tvFrom.setText(inputtext);\r\n        MLRemoteTranslator mlRemoteTranslator = MLTranslatorFactory.getInstance().getRemoteTranslator(setting);\r\n        // sourceText: text to be translated, with up to 5000 characters.\r\n        final Task<String> task = mlRemoteTranslator.asyncTranslate(inputtext);\r\n        task.addOnSuccessListener(new OnSuccessListener<String>() {\r\n            @Override\r\n            public void onSuccess(String text) {\r\n                tvTo.setText(text);\r\n                Log.d(inputtext+\"translated: \",text);\r\n                // Processing logic for recognition success.\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(Exception e) {\r\n                // Processing logic for recognition failure.\r\n                try {\r\n                    MLException mlException = (MLException)e;\r\n                    // Obtain the result code. You can process the result code and customize respective messages displayed to users.\r\n                    int errorCode = mlException.getErrCode();\r\n                    // Obtain the error information. You can quickly locate the fault based on the result code.\r\n                    String errorMessage = mlException.getMessage();\r\n                } catch (Exception error) {\r\n                    if (mlRemoteTranslator!= null) {\r\n                        mlRemoteTranslator.stop();\r\n                    }\r\n                    // Handle the conversion error.\r\n                }\r\n            }\r\n        });\r\n    }\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        this.mPreview.stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if (this.mLensEngine != null) {\r\n            this.mLensEngine.release();\r\n        }\r\n        if (this.analyzer != null) {\r\n            try {\r\n                this.analyzer.stop();\r\n            } catch (IOException e) {\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mytravelbuddy/ui/camera_translate.java b/app/src/main/java/com/example/mytravelbuddy/ui/camera_translate.java
--- a/app/src/main/java/com/example/mytravelbuddy/ui/camera_translate.java	(revision 27cfac50a4e9a78a6a723e59bf50b14cb110b05c)
+++ b/app/src/main/java/com/example/mytravelbuddy/ui/camera_translate.java	(date 1635322045607)
@@ -50,11 +50,12 @@
     private int lensType = LensEngine.BACK_LENS;
     private LensEnginePreview mPreview;
     private TextView tv,tvFrom,tvTo,tvcamerastatus;
-    int checkedItem=0;
+    int languagesFrom,checkedItem=0;
     ImageButton pause;
-    String LanguageSelectedFrom="ko";
+    String LanguageSelectedFrom="en";
     String[]listItems = {"English","Korean", "Traditional Chinese", "Japanese", "Malay", "Tamil","German","Spanish","Indonesian","Russian","Thai","Vietnamese"};
     String[]languageselected = {"en","ko", "zh", "ja", "ms", "ta","de","es","id","ru","th","vi"};
+    public String LanguageFrom = "en";
     public String Status="pause";
     List<String> list = new ArrayList<String>();
     Button btnlanguagefrom;
@@ -72,7 +73,7 @@
         analyzer = new MLTextAnalyzer.Factory(camera_translate.this).setLocalOCRMode(MLLocalTextSetting.OCR_DETECT_MODE).setLanguage(LanguageSelectedFrom).create();
         analyzer.setTransactor(new OcrDetectorProcessor());
         createLensEngine();
-        startLensEngine(LanguageSelectedFrom);
+        startLensEngine();
 
 
         btnlanguagefrom=findViewById(R.id.btnlanguagefrom);
@@ -91,7 +92,7 @@
 
                         break;
                     case "play":
-                        startLensEngine(LanguageSelectedFrom);
+                        startLensEngine();
                         pause.setImageResource(R.drawable.ic_baseline_play_circle_outline_24);
                         Toast.makeText(camera_translate.this, "The Preview Is Play ", Toast.LENGTH_SHORT).show();
                         tvcamerastatus.setText("The Camera Is Play");
@@ -115,8 +116,10 @@
                     public void onClick(DialogInterface dialog, int which) {
 //                        Toast.makeText(root.getContext(), "Position: " + which + " Value: " + listItems[which], Toast.LENGTH_LONG).show();
                         LanguageSelectedFrom=languageselected[which];
-                        startLensEngine(LanguageSelectedFrom);
+//                        Toast.makeText(camera_translate.this, "Language From: " + LanguageSelectedFrom, Toast.LENGTH_SHORT).show();
+                        startLensEngine();
                         checkedItem = which;
+                        LanguageFrom = listItems[which];
                         btnlanguagefrom.setText(listItems[which]);
 
 
@@ -146,17 +149,17 @@
                 .create();
     }
 
-    private void startLensEngine(String LanguageSelectedFroms) {
+    private void startLensEngine() {
         //Translation Kit
         // Method 2: Use the customized parameter MLLocalTextSetting to configure the text analyzer on the device.
         MLLocalTextSetting setting = new MLLocalTextSetting.Factory()
                 .setOCRMode(MLLocalTextSetting.OCR_DETECT_MODE)
                 // Specify languages that can be recognized.
-                .setLanguage(LanguageSelectedFroms)
+                .setLanguage(LanguageSelectedFrom)
                 .create();
-        Toast.makeText(camera_translate.this, "Language From: " + LanguageSelectedFrom, Toast.LENGTH_SHORT).show();
-        Toast.makeText(camera_translate.this, "Language : " + LanguageSelectedFroms, Toast.LENGTH_SHORT).show();
         analyzer = MLAnalyzerFactory.getInstance().getLocalTextAnalyzer(setting);
+        Toast.makeText(this, "Language CURRENTLY: " + LanguageSelectedFrom, Toast.LENGTH_SHORT).show();
+
         if (this.mLensEngine != null) {
             try {
                 this.mPreview.start(this.mLensEngine);
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
new file mode 100644
--- /dev/null	(date 1635322045725)
+++ b/README.md	(date 1635322045725)
@@ -0,0 +1,2 @@
+# MyTravelBuddy
+Huawei App
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Add project specific ProGuard rules here.\r\n# You can control the set of applied configuration files using the\r\n# proguardFiles setting in build.gradle.\r\n#\r\n# For more details, see\r\n#   http://developer.android.com/guide/developing/tools/proguard.html\r\n\r\n# If your project uses WebView with JS, uncomment the following\r\n# and specify the fully qualified class name to the JavaScript interface\r\n# class:\r\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n#   public *;\r\n#}\r\n\r\n# Uncomment this to preserve the line number information for\r\n# debugging stack traces.\r\n#-keepattributes SourceFile,LineNumberTable\r\n\r\n# If you keep the line number information, uncomment this to\r\n# hide the original source file name.\r\n#-renamesourcefileattribute SourceFile\r\n-ignorewarnings\r\n-keepattributes *Annotation*\r\n-keepattributes Exceptions\r\n-keepattributes InnerClasses\r\n-keepattributes Signature\r\n-keepattributes SourceFile,LineNumberTable\r\n#-keep class com.hianalytics.android.**{*;}\r\n#-keep class com.huawei.updatesdk.**{*;}\r\n#-keep class com.huawei.hms.**{*;}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n-keepattributes SourceFile,LineNumberTable\r\n#-keep class com.hianalytics.android.**{*;}\r\n#-keep class com.huawei.updatesdk.**{*;}\r\n#-keep class com.huawei.hms.**{*;}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
--- a/app/proguard-rules.pro	(revision 27cfac50a4e9a78a6a723e59bf50b14cb110b05c)
+++ b/app/proguard-rules.pro	(date 1635322045632)
@@ -43,3 +43,11 @@
 #-keep class com.huawei.hms.**{*;}
 
 
+
+-keepattributes SourceFile,LineNumberTable
+-keep class com.hianalytics.android.**{*;}
+-keep class com.huawei.updatesdk.**{*;}
+-keep class com.huawei.hms.**{*;}
+
+
+
Index: app/src/main/java/com/example/mytravelbuddy/RequestLocationPermission.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mytravelbuddy/RequestLocationPermission.java b/app/src/main/java/com/example/mytravelbuddy/RequestLocationPermission.java
new file mode 100644
--- /dev/null	(date 1635322045734)
+++ b/app/src/main/java/com/example/mytravelbuddy/RequestLocationPermission.java	(date 1635322045734)
@@ -0,0 +1,55 @@
+/*
+*       Copyright 2020. Huawei Technologies Co., Ltd. All rights reserved.
+
+        Licensed under the Apache License, Version 2.0 (the "License");
+        you may not use this file except in compliance with the License.
+        You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+        Unless required by applicable law or agreed to in writing, software
+        distributed under the License is distributed on an "AS IS" BASIS,
+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+        See the License for the specific language governing permissions and
+        limitations under the License.
+*/
+package com.example.mytravelbuddy;
+
+import android.Manifest;
+import android.app.Activity;
+import android.content.Context;
+import android.content.pm.PackageManager;
+import android.os.Build;
+import android.util.Log;
+
+import androidx.core.app.ActivityCompat;
+
+public class RequestLocationPermission {
+    public static final String TAG = "RequestPermission";
+    public static void requestLocationPermission(Context context) {
+        // check location permisiion
+        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.P) {
+            Log.i(TAG, "sdk < 28 Q");
+            if (ActivityCompat.checkSelfPermission(context,
+                    Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED
+                    && ActivityCompat.checkSelfPermission(context,
+                    Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+                String[] strings =
+                        {Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION};
+                ActivityCompat.requestPermissions((Activity)context, strings, 1);
+            }
+        } else {
+            if (ActivityCompat.checkSelfPermission(context,
+                    Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED
+                    && ActivityCompat.checkSelfPermission(context,
+                    Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED
+                    && ActivityCompat.checkSelfPermission(context,
+                    "android.permission.ACCESS_BACKGROUND_LOCATION") != PackageManager.PERMISSION_GRANTED) {
+                String[] strings = {Manifest.permission.ACCESS_FINE_LOCATION,
+                        Manifest.permission.ACCESS_COARSE_LOCATION,
+                        "android.permission.ACCESS_BACKGROUND_LOCATION"};
+                ActivityCompat.requestPermissions((Activity)context, strings, 2);
+            }
+        }
+    }
+}
Index: app/src/main/java/com/example/mytravelbuddy/RequestLocationUpdatesWithCallbackActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mytravelbuddy/RequestLocationUpdatesWithCallbackActivity.java b/app/src/main/java/com/example/mytravelbuddy/RequestLocationUpdatesWithCallbackActivity.java
new file mode 100644
--- /dev/null	(date 1635322045757)
+++ b/app/src/main/java/com/example/mytravelbuddy/RequestLocationUpdatesWithCallbackActivity.java	(date 1635322045757)
@@ -0,0 +1,249 @@
+/*
+*       Copyright 2020. Huawei Technologies Co., Ltd. All rights reserved.
+
+        Licensed under the Apache License, Version 2.0 (the "License");
+        you may not use this file except in compliance with the License.
+        You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+        Unless required by applicable law or agreed to in writing, software
+        distributed under the License is distributed on an "AS IS" BASIS,
+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+        See the License for the specific language governing permissions and
+        limitations under the License.
+*/
+package com.example.mytravelbuddy;
+
+import java.util.List;
+
+import com.example.mytravelbuddy.ui.Map_Activity;
+import com.huawei.hmf.tasks.OnFailureListener;
+import com.huawei.hmf.tasks.OnSuccessListener;
+import com.huawei.hmf.tasks.Task;
+
+import com.huawei.hms.common.ApiException;
+import com.huawei.hms.common.ResolvableApiException;
+import com.huawei.hms.location.FusedLocationProviderClient;
+import com.huawei.hms.location.LocationAvailability;
+import com.huawei.hms.location.LocationCallback;
+import com.huawei.hms.location.LocationRequest;
+import com.huawei.hms.location.LocationResult;
+import com.huawei.hms.location.LocationServices;
+import com.huawei.hms.location.LocationSettingsRequest;
+import com.huawei.hms.location.LocationSettingsResponse;
+import com.huawei.hms.location.LocationSettingsStatusCodes;
+import com.huawei.hms.location.SettingsClient;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.IntentSender;
+import android.content.pm.PackageManager;
+import android.location.Location;
+import android.os.Bundle;
+import android.os.Looper;
+import android.util.Log;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Toast;
+
+/**
+ * Example of Using requestLocationUpdates and removeLocationUpdates.
+ * Requests a location update and calls back on the specified Looper thread. This method requires that the requester process exist for continuous callback.
+ * If you still want to receive the callback after the process is killed, see requestLocationUpdates (LocationRequest request,PendingIntent callbackIntent)
+ */
+public class RequestLocationUpdatesWithCallbackActivity extends Activity implements OnClickListener {
+    public static final String TAG = "LocationUpdatesCallback";
+    LocationCallback mLocationCallback;
+    LocationRequest mLocationRequest;
+    private FusedLocationProviderClient mFusedLocationProviderClient;
+    private SettingsClient mSettingsClient;
+    public Double latitude,longitude;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_location_request_location_updates_callback);
+        RequestLocationPermission.requestLocationPermission(this);
+        // Button click listeners
+        findViewById(R.id.location_requestLocationUpdatesWithCallback).setOnClickListener(this);
+        findViewById(R.id.location_removeLocationUpdatesWithCallback).setOnClickListener(this);
+        findViewById(R.id.nextButton).setOnClickListener(this);
+//        addLogFragment();
+        mFusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);
+        mSettingsClient = LocationServices.getSettingsClient(this);
+        mLocationRequest = new LocationRequest();
+        // Sets the interval for location update (unit: Millisecond)
+        mLocationRequest.setInterval(5000);
+        // Sets the priority
+        mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
+        if (null == mLocationCallback) {
+            mLocationCallback = new LocationCallback() {
+                @Override
+                public void onLocationResult(LocationResult locationResult) {
+                    if (locationResult != null) {
+                        List<Location> locations = locationResult.getLocations();
+                        if (!locations.isEmpty()) {
+                            for (Location location : locations) {
+                                Toast.makeText(RequestLocationUpdatesWithCallbackActivity.this,
+                                        "onLocationResult location[Longitude,Latitude,Accuracy]:" + location.getLongitude()
+                                                + "," + location.getLatitude() + "," + location.getAccuracy(), Toast.LENGTH_LONG).show();
+                                latitude=location.getLatitude();
+                                longitude=location.getLongitude();
+                            }
+                        }
+                    }
+                }
+
+
+                @Override
+                public void onLocationAvailability(LocationAvailability locationAvailability) {
+                    if (locationAvailability != null) {
+                        boolean flag = locationAvailability.isLocationAvailable();
+                        Log.i(TAG, "onLocationAvailability isLocationAvailable:" + flag);
+                    }
+                }
+            };
+        }
+    }
+
+    public Double getLat(){
+        return latitude;
+    }
+
+    public Double getLong(){
+        return longitude;
+    }
+
+    /**
+     * Requests a location update and calls back on the specified Looper thread.
+     */
+    private void requestLocationUpdatesWithCallback() {
+        try {
+            LocationSettingsRequest.Builder builder = new LocationSettingsRequest.Builder();
+            builder.addLocationRequest(mLocationRequest);
+            LocationSettingsRequest locationSettingsRequest = builder.build();
+            // Before requesting location update, invoke checkLocationSettings to check device settings.
+            Task<LocationSettingsResponse> locationSettingsResponseTask = mSettingsClient.checkLocationSettings(locationSettingsRequest);
+            locationSettingsResponseTask.addOnSuccessListener(new OnSuccessListener<LocationSettingsResponse>() {
+                @Override
+                public void onSuccess(LocationSettingsResponse locationSettingsResponse) {
+                    Log.i(TAG, "check location settings success");
+                    mFusedLocationProviderClient
+                            .requestLocationUpdates(mLocationRequest, mLocationCallback, Looper.getMainLooper())
+                            .addOnSuccessListener(new OnSuccessListener<Void>() {
+                                @Override
+                                public void onSuccess(Void aVoid) {
+                                    Toast.makeText(RequestLocationUpdatesWithCallbackActivity.this,  "requestLocationUpdatesWithCallback onSuccess", Toast.LENGTH_LONG).show();
+                                }
+                            })
+                            .addOnFailureListener(new OnFailureListener() {
+                                @Override
+                                public void onFailure(Exception e) {
+                                    Log.e(TAG,
+                                            "requestLocationUpdatesWithCallback onFailure:" + e.getMessage());
+                                }
+                            });
+                }
+            })
+                    .addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(Exception e) {
+                            Log.i(TAG,  "checkLocationSetting onFailure:" + e.getMessage());
+                            int statusCode = ((ApiException) e).getStatusCode();
+                            switch (statusCode) {
+                                case LocationSettingsStatusCodes.RESOLUTION_REQUIRED:
+                                    try {
+                                        //When the startResolutionForResult is invoked, a dialog box is displayed, asking you to open the corresponding permission.
+                                        ResolvableApiException rae = (ResolvableApiException) e;
+                                        rae.startResolutionForResult(RequestLocationUpdatesWithCallbackActivity.this, 0);
+                                    } catch (IntentSender.SendIntentException sie) {
+                                        Log.e(TAG, "PendingIntent unable to execute request.");
+                                    }
+                                    break;
+                                default:
+                                    break;
+                            }
+                        }
+                    });
+        } catch (Exception e) {
+            Log.i(TAG,  "requestLocationUpdatesWithCallback exception:" + e.getMessage());
+        }
+    }
+
+    @Override
+    protected void onDestroy() {
+        //Removed when the location update is no longer required.
+        removeLocationUpdatesWithCallback();
+        super.onDestroy();
+    }
+
+    /**
+     * Removed when the location update is no longer required.
+     */
+    private void removeLocationUpdatesWithCallback() {
+        try {
+            Task<Void> voidTask = mFusedLocationProviderClient.removeLocationUpdates(mLocationCallback);
+            voidTask.addOnSuccessListener(new OnSuccessListener<Void>() {
+                @Override
+                public void onSuccess(Void aVoid) {
+                    Toast.makeText(RequestLocationUpdatesWithCallbackActivity.this,"removeLocationUpdatesWithCallback onSuccess", Toast.LENGTH_LONG).show();
+                }
+            })
+                    .addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(Exception e) {
+                            Log.e(TAG,"removeLocationUpdatesWithCallback onFailure:" + e.getMessage());
+                        }
+                    });
+        } catch (Exception e) {
+            Log.i(TAG,  "removeLocationUpdatesWithCallback exception:" + e.getMessage());
+        }
+    }
+
+    @Override
+    public void onClick(View v) {
+        try {
+            switch (v.getId()) {
+                case R.id.location_requestLocationUpdatesWithCallback:
+                    requestLocationUpdatesWithCallback();
+                    break;
+                case R.id.location_removeLocationUpdatesWithCallback:
+                    removeLocationUpdatesWithCallback();
+                    break;
+                case R.id.nextButton:
+                    startActivity(new Intent(this, Map_Activity.class));
+
+                    break;
+
+                default:
+                    break;
+            }
+        } catch (Exception e) {
+            Log.e(TAG, "RequestLocationUpdatesWithCallbackActivity Exception:" + e);
+        }
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        if (requestCode == 1) {
+            if (grantResults.length > 1 && grantResults[0] == PackageManager.PERMISSION_GRANTED
+                    && grantResults[1] == PackageManager.PERMISSION_GRANTED) {
+                Log.i(TAG, "onRequestPermissionsResult: apply LOCATION PERMISSION successful");
+            } else {
+                Log.i(TAG, "onRequestPermissionsResult: apply LOCATION PERMISSSION  failed");
+            }
+        }
+
+        if (requestCode == 2) {
+            if (grantResults.length > 2 && grantResults[2] == PackageManager.PERMISSION_GRANTED
+                    && grantResults[0] == PackageManager.PERMISSION_GRANTED
+                    && grantResults[1] == PackageManager.PERMISSION_GRANTED) {
+                Log.i(TAG, "onRequestPermissionsResult: apply ACCESS_BACKGROUND_LOCATION successful");
+            } else {
+                Log.i(TAG, "onRequestPermissionsResult: apply ACCESS_BACKGROUND_LOCATION  failed");
+            }
+        }
+    }
+}
Index: app/src/main/res/layout/activity_location_request_location_updates_callback.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_location_request_location_updates_callback.xml b/app/src/main/res/layout/activity_location_request_location_updates_callback.xml
new file mode 100644
--- /dev/null	(date 1635322045767)
+++ b/app/src/main/res/layout/activity_location_request_location_updates_callback.xml	(date 1635322045767)
@@ -0,0 +1,47 @@
+<!--
+  ~ Copyright (c) Huawei Technologies Co., Ltd. 2019-2019. All rights reserved.
+  -->
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:focusable="true"
+    android:focusableInTouchMode="true"
+    tools:context=".RequestLocationUpdatesWithCallbackActivity">
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:focusable="true"
+            android:focusableInTouchMode="true"
+            android:orientation="vertical">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="location updates" />
+
+            <Button
+                android:id="@+id/location_requestLocationUpdatesWithCallback"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="requestLocationUpdates with callback" />
+
+            <Button
+                android:id="@+id/location_removeLocationUpdatesWithCallback"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="removeLocationUpdates with callback" />
+            <Button
+                android:id="@+id/nextButton"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="go to map" />
+        </LinearLayout>
+    </ScrollView>
+
+</LinearLayout>
Index: app/agconnect-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"agcgw\":{\r\n\t\t\"backurl\":\"connect-dra.dbankcloud.cn\",\r\n\t\t\"url\":\"connect-dra.hispace.hicloud.com\",\r\n\t\t\"websocketbackurl\":\"connect-ws-dra.hispace.dbankcloud.cn\",\r\n\t\t\"websocketurl\":\"connect-ws-dra.hispace.dbankcloud.com\"\r\n\t},\r\n\t\"agcgw_all\":{\r\n\t\t\"CN\":\"connect-drcn.hispace.hicloud.com\",\r\n\t\t\"CN_back\":\"connect-drcn.dbankcloud.cn\",\r\n\t\t\"DE\":\"connect-dre.hispace.hicloud.com\",\r\n\t\t\"DE_back\":\"connect-dre.dbankcloud.cn\",\r\n\t\t\"RU\":\"connect-drru.hispace.hicloud.com\",\r\n\t\t\"RU_back\":\"connect-drru.dbankcloud.cn\",\r\n\t\t\"SG\":\"connect-dra.hispace.hicloud.com\",\r\n\t\t\"SG_back\":\"connect-dra.dbankcloud.cn\"\r\n\t},\r\n\t\"client\":{\r\n\t\t\"cp_id\":\"2640060000022923671\",\r\n\t\t\"product_id\":\"737518067793594768\",\r\n\t\t\"client_id\":\"726967393108116416\",\r\n\t\t\"client_secret\":\"50743EE03AD2D53C15FA17C9AE02AABC55B8D8A63749ADFC8544DF2FA5559093\",\r\n\t\t\"project_id\":\"737518067793594768\",\r\n\t\t\"app_id\":\"104790083\",\r\n\t\t\"api_key\":\"CwEAAAAA87ygm62CxaYAnCnmLDj8LNdgxZ9Gt+/zTKg5oQDMsbJtWX/zNvzvhQN6gyEZKOWnoEQnrVwrDpT57bq0EZelxL3A9BE=\",\r\n\t\t\"package_name\":\"com.example.mytravelbuddy\"\r\n\t},\r\n\t\"oauth_client\":{\r\n\t\t\"client_id\":\"104790083\",\r\n\t\t\"client_type\":1\r\n\t},\r\n\t\"app_info\":{\r\n\t\t\"app_id\":\"104790083\",\r\n\t\t\"package_name\":\"com.example.mytravelbuddy\"\r\n\t},\r\n\t\"service\":{\r\n\t\t\"analytics\":{\r\n\t\t\t\"collector_url\":\"datacollector-dra.dt.hicloud.com,datacollector-dra.dt.dbankcloud.cn\",\r\n\t\t\t\"resource_id\":\"p1\",\r\n\t\t\t\"channel_id\":\"\"\r\n\t\t},\r\n\t\t\"search\":{\r\n\t\t\t\"url\":\"https://search-dra.cloud.huawei.com\"\r\n\t\t},\r\n\t\t\"cloudstorage\":{\r\n\t\t\t\"storage_url\":\"https://ops-dra.agcstorage.link\"\r\n\t\t},\r\n\t\t\"ml\":{\r\n\t\t\t\"mlservice_url\":\"ml-api-dra.ai.dbankcloud.com,ml-api-dra.ai.dbankcloud.cn\"\r\n\t\t}\r\n\t},\r\n\t\"region\":\"SG\",\r\n\t\"configuration_version\":\"3.0\",\r\n\t\"appInfos\":[\r\n\t\t{\r\n\t\t\t\"package_name\":\"com.example.mytravelbuddy\",\r\n\t\t\t\"client\":{\r\n\t\t\t\t\"app_id\":\"104790083\"\r\n\t\t\t},\r\n\t\t\t\"app_info\":{\r\n\t\t\t\t\"package_name\":\"com.example.mytravelbuddy\",\r\n\t\t\t\t\"app_id\":\"104790083\"\r\n\t\t\t},\r\n\t\t\t\"oauth_client\":{\r\n\t\t\t\t\"client_type\":1,\r\n\t\t\t\t\"client_id\":\"104790083\"\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/agconnect-services.json b/app/agconnect-services.json
--- a/app/agconnect-services.json	(revision 27cfac50a4e9a78a6a723e59bf50b14cb110b05c)
+++ b/app/agconnect-services.json	(date 1635322045717)
@@ -1,19 +1,19 @@
 {
 	"agcgw":{
-		"backurl":"connect-dra.dbankcloud.cn",
-		"url":"connect-dra.hispace.hicloud.com",
+		"backurl":"connect-dra.hispace.hicloud.com",
+		"url":"connect-dra.dbankcloud.cn",
 		"websocketbackurl":"connect-ws-dra.hispace.dbankcloud.cn",
 		"websocketurl":"connect-ws-dra.hispace.dbankcloud.com"
 	},
 	"agcgw_all":{
-		"CN":"connect-drcn.hispace.hicloud.com",
-		"CN_back":"connect-drcn.dbankcloud.cn",
-		"DE":"connect-dre.hispace.hicloud.com",
-		"DE_back":"connect-dre.dbankcloud.cn",
-		"RU":"connect-drru.hispace.hicloud.com",
-		"RU_back":"connect-drru.dbankcloud.cn",
-		"SG":"connect-dra.hispace.hicloud.com",
-		"SG_back":"connect-dra.dbankcloud.cn"
+		"CN":"connect-drcn.dbankcloud.cn",
+		"CN_back":"connect-drcn.hispace.hicloud.com",
+		"DE":"connect-dre.dbankcloud.cn",
+		"DE_back":"connect-dre.hispace.hicloud.com",
+		"RU":"connect-drru.dbankcloud.cn",
+		"RU_back":"connect-drru.hispace.hicloud.com",
+		"SG":"connect-dra.dbankcloud.cn",
+		"SG_back":"connect-dra.hispace.hicloud.com"
 	},
 	"client":{
 		"cp_id":"2640060000022923671",
@@ -36,6 +36,10 @@
 	"service":{
 		"analytics":{
 			"collector_url":"datacollector-dra.dt.hicloud.com,datacollector-dra.dt.dbankcloud.cn",
+			"collector_url_ru":"datacollector-drru.dt.hicloud.com,datacollector-drru.dt.dbankcloud.cn",
+			"collector_url_sg":"datacollector-dra.dt.hicloud.com,datacollector-dra.dt.dbankcloud.cn",
+			"collector_url_de":"datacollector-dre.dt.hicloud.com,datacollector-dre.dt.dbankcloud.cn",
+			"collector_url_cn":"datacollector-drcn.dt.hicloud.com,datacollector-drcn.dt.dbankcloud.cn",
 			"resource_id":"p1",
 			"channel_id":""
 		},
Index: app/src/main/res/drawable/ic_baseline_arrow_circle_up_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_arrow_circle_up_24.xml b/app/src/main/res/drawable/ic_baseline_arrow_circle_up_24.xml
new file mode 100644
--- /dev/null	(date 1635322045776)
+++ b/app/src/main/res/drawable/ic_baseline_arrow_circle_up_24.xml	(date 1635322045776)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M12,20c-4.41,0 -8,-3.59 -8,-8s3.59,-8 8,-8s8,3.59 8,8S16.41,20 12,20M12,22c5.52,0 10,-4.48 10,-10c0,-5.52 -4.48,-10 -10,-10C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22L12,22zM11,12l0,4h2l0,-4h3l-4,-4l-4,4H11z"/>
+</vector>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 27cfac50a4e9a78a6a723e59bf50b14cb110b05c)
+++ b/.idea/gradle.xml	(date 1635322045745)
@@ -7,6 +7,7 @@
         <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleJvm" value="1.8" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
